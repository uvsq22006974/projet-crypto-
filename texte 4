def dechiffrement(texte, cle):
    alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u',
                'v', 'w', 'x', 'y', 'z']
 
    texte_claire = []
    
    texte = ["jum kfj bvzous fnvceqeqej".      #j'ai trouver la clé mais j'arrive pas a le programmer automatiquement j'ai décoder manuelment avec se programme
    
             ,"ev ksquvr ymf rjfd"
             ,"trnn zwfim dtjati"
             ,"nz rpet zqbzmzrs huz pvrtmi"
             ,"wh cen pvrtmi trinsmt"
             ,"rj lz rpcedp fjt jqpzd"
             ,"b ui bpke tnjetp"
             ,"nstt sjr grus zji yi uyuii"
             ,"wzoj neupzr wh ca ptov"
             ,"if vjycsrin obj xvdwvr"
             ,"et eiy sslfai ev wykmvs"
             ,"kfj vvzjxnzir u'vvffet"
             ,"evvjvdvis hd krjthrlen"
             ,"pdt sdrffj à bvc iy"
             ,"pvz ysqnvno rbes vdwvr"
             ,"cen bizeiw ofimw el Miwjhuz"
             ,"zwrno c'rvjmq toirt"
             ,"kv qsteiadw qrs gqfmem"]
 

    boucle = 0
    boucle2 =0
    
    for lettre in texte[boucle2]:


        if not 96 < ord(lettre)<123: 
            texte_claire.append(lettre)    #petite partie pour recupérer toute les choses qui ne sont pas des lettre minuscule du code asci




        else:         #escalier de la mort a expliquer en oral 
            flag1=0   #les deux flag qui sont des variable pour trouver la possition d'une lettre
            flag2=0
            for h in alphabet:
                flag1+=1
                if h == lettre:

                    for l in alphabet:
                        flag2+=1
                        if cle[boucle]==l:
                            flag1 = flag1-1     
                            flag2 = flag2-1
                            
                            chiffre =(( flag1- flag2) % 26)
                            
                            texte_claire.append(alphabet[chiffre])

        boucle+= 1
        if boucle == len(cle): #comme c'est un code vigenere la clé se repete donc il faut une boucle pour que la clé revienne au premier terme de celle si
            boucle = 0

    return "".join(texte_claire)


print(dechiffrement("texte","ravezb"))
